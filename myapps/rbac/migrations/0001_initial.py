# Generated by Django 2.1.4 on 2018-12-26 03:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=16, verbose_name='权限组名')),
            ],
            options={
                'verbose_name_plural': '权限组表',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=16)),
            ],
            options={
                'verbose_name_plural': '菜单表',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=64, verbose_name='权限url路径')),
                ('feature', models.CharField(max_length=16, verbose_name='权限对应功能')),
                ('display', models.BooleanField(default=True, verbose_name='权限是否显示在菜单栏')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.Group', verbose_name='所属权限组')),
            ],
            options={
                'verbose_name_plural': '权限表',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='角色名')),
                ('permissions', models.ManyToManyField(to='rbac.Permission', verbose_name='请选择角色拥有的权限：')),
            ],
            options={
                'verbose_name_plural': '角色表',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=16, verbose_name='用户名')),
                ('password_hash', models.CharField(max_length=100, verbose_name='登录密码')),
                ('email', models.CharField(default='', max_length=100, verbose_name='邮箱📮')),
            ],
            options={
                'verbose_name_plural': '用户表',
            },
        ),
        migrations.CreateModel(
            name='UserPay',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.CharField(default='', max_length=30, verbose_name='支付金额')),
                ('stime', models.DateTimeField(auto_now_add=True, verbose_name='支付时间')),
                ('month', models.CharField(default='', max_length=30, null=True, verbose_name='VIP充值月数')),
                ('alipay_num', models.CharField(default='', max_length=300, null=True, verbose_name='支付宝订单号')),
                ('weichat_num', models.CharField(default='', max_length=300, null=True, verbose_name='支付宝订单号')),
            ],
            options={
                'verbose_name_plural': '用户充值表',
            },
        ),
        migrations.CreateModel(
            name='VIP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('isvip', models.BooleanField(default=False, verbose_name='VIP')),
                ('stime', models.DateTimeField(auto_now=True, verbose_name='VIP开始时间')),
                ('etime', models.DateTimeField(auto_now=True, verbose_name='VIP开始时间')),
            ],
            options={
                'verbose_name_plural': 'VIP表',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='pay',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.UserPay', verbose_name='用户充值信息'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(to='rbac.Role', verbose_name='用户拥有的角色'),
        ),
        migrations.AddField(
            model_name='user',
            name='vip',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.VIP', verbose_name='用户是否是VIP'),
        ),
        migrations.AddField(
            model_name='group',
            name='menu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.Menu', verbose_name='所属菜单'),
        ),
    ]
